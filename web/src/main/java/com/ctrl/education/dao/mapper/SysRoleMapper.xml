<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ctrl.education.dao.SysRoleMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.ctrl.education.model.SysRole">
        <id column="id" property="id"/>
        <result column="pid" property="pid"/>
        <result column="pids" property="pids"/>
        <result column="name" property="name"/>
        <result column="office_id" property="officeId"/>
        <result column="desc" property="desc"/>
        <result column="status" property="status"/>
        <result column="create_time" property="createTime"/>
    </resultMap>
    <select id="tree" resultType="com.ctrl.education.core.node.ZTreeNode">
        select id,pid as pId,name,
		(
		CASE
		WHEN (pId = 0 OR pId IS NULL) THEN
		'true'
		ELSE
		'false'
		END
		) as isOpen from sys_role WHERE status=1
    </select>
    <select id="roleTreeListByRoleId" resultType="com.ctrl.education.core.node.ZTreeNode">
        SELECT
        r.id "id",
        pId "pId",
        NAME AS "name",
        (
        CASE
        WHEN (pId = 0 OR pId IS NULL) THEN
        'true'
        ELSE
        'false'
        END
        ) "open",
        (
        CASE
        WHEN ( r1.id IS NULL) THEN
        'false'
        ELSE
        'true'
        END
        ) "checked"
        FROM
        sys_role r
        LEFT JOIN (
        SELECT
        id
        FROM
        sys_role
        WHERE
        id IN

        <foreach collection="array" index="index" item="i" open="(" separator="," close=")">
            #{i}
        </foreach>

        ) r1 ON r.id = r1.id
    </select>
    <select id="getList" parameterType="java.util.Map" resultType="com.ctrl.education.dto.SysRoleDto">
        SELECT
        role.*,
        office.name AS officeName
        FROM
        (SELECT
        a.name,
        a.id,
        a.pid,
        a.pids,
        a.status,
        a.desc,
        a.office_id,
        a.create_time AS createTime,
        CASE
        a.pid
        WHEN "0"
        THEN "--"
        ELSE
        (SELECT
        b.name
        FROM
        sys_role b
        WHERE a.pid = b.id)
        END AS pName
        FROM
        sys_role a) role
        LEFT JOIN sys_office office
        ON role.office_id = office.id


        <if test="name != null">
            WHERE role.name LIKE CONCAT('%',#{name},'%')
        </if>
        ORDER BY role.createTime DESC
        LIMIT ${offset},${limit}
    </select>
    <select id="selectByRoleId" resultType="com.ctrl.education.dto.SysRoleDto">
         SELECT
          role.*,
          office.name AS officeName
        FROM
          (SELECT
            a.name,
            a.id,
            a.pid,
            a.pids,
            a.status,
            a.desc,
            a.office_id AS officeId,
            a.create_time AS createTime,
            CASE
              a.pid
              WHEN "0"
              THEN "顶级"
              ELSE
              (SELECT
                b.name
              FROM
                sys_role b
              WHERE a.pid = b.id)
            END AS pName
          FROM
            sys_role a) role
          LEFT JOIN sys_office office
            ON role.officeId = office.id
              where role.id=#{id}
    </select>
    <delete id="deleteRolesById">
        delete from sys_relation where roleid = #{roleId}
    </delete>
    <select id="roleTreeList" resultType="com.ctrl.education.core.node.ZTreeNode">
        select id "id",pId
        "pId",name as "name",(case when (pId=0 or pId is null) then 'true'
        else 'false' end) "open" from sys_role
    </select>
</mapper>
